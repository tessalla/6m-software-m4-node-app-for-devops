# this file tells CircleCI what to do
version: 2.1
orbs:
  node: circleci/node@5.0.1
  docker: circleci/docker@2.1.4
  snyk: snyk/snyk@1.5.0

# commands - reusable sets of steps
commands:
  install_deps:
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm

# Each job has 2 parts - 1. Executor, 2. Steps
jobs:
  build:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm

  scan:
    docker:
      - image: cimg/node:16.10
    environment:
      IMAGE_NAME: tessalla/education-space
    steps:
        - checkout
        - setup_remote_docker      
        - docker/check
        - run: docker build -t cimg/node:16.10 .
        - snyk/scan: 
            docker-image-name: cimg/node:16.10

  build-and-push:
   # executor: # long form executor
   #   name: docker
   #   docker:
   #     - image: cimg/node:16.10
    # Means spin up a container using node: 16.10 and run the steps
    # short hand for executor
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Debug DockerHub Username
          command: echo "DOCKERHUB_USERNAME is [$DOCKERHUB_USERNAME]"
      - run:
          name: Docker Login
          command: echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - docker/build:
          image: tessalla/education-space
          tag: << pipeline.git.revision >>
      - docker/push:
          image: tessalla/education-space
          tag: << pipeline.git.revision >>

  # without orbs, we have to run everything manually using run
  #    - run: |
  #    echo "Installing dependencies"
  #    npm install
  lint:
    docker:
      - image: cimg/node:20.12
    steps:
      - install_deps
      - run: |
          echo "Running lint..."
          npm run lint

  test:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - install_deps
      - run: |
          echo "Running tests..."
          npm run test

# define the workflow for job execution order
workflows:
  simple_workflow:
    jobs:
      - build
      - lint: # run lint job
          requires:
            - build
      - test: # run test job after build
          requires:
            - build # test depends on build
      - build-and-push:
          requires:
            - test
      - scan:
          requires:
            - build
          filters:
            branches:
              only: main